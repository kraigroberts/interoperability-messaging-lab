name: Generate VMF Sample

on:
  push:
    branches:
      - main
    paths:
      - tools/make_vmf_sample.py
      - src/parsers/vmf_parser.py
      - src/transforms/normalize_schema.py
      - .github/workflows/gen-vmf-sample.yml
  # Always run on PRs to main so the required check reports;
  # weâ€™ll auto-skip the heavy work if irrelevant files changed.
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

# Ensure only one run per ref; cancel in-progress duplicates
concurrency:
  group: gen-vmf-sample-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-vmf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps (none required)
        run: python -m pip install --upgrade pip

      # On PRs, detect whether relevant files changed; set an output
      - name: Detect relevant changes (PR only)
        id: detect
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          echo "Base: $BASE_SHA"
          echo "Head: $HEAD_SHA"
          FILES=$(git diff --name-only "${BASE_SHA}...${HEAD_SHA}" || true)
          echo "Changed files:"
          echo "$FILES"

          # Patterns that should trigger generation
          PATTERN='^(tools/make_vmf_sample\.py|src/parsers/vmf_parser\.py|src/transforms/normalize_schema\.py|\.github/workflows/gen-vmf-sample\.yml)$'

          if echo "$FILES" | grep -E "$PATTERN" >/dev/null 2>&1; then
            echo "relevant=true" >> "$GITHUB_OUTPUT"
          else
            echo "relevant=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate VMF sample
        # Always run on push/workflow_dispatch; on PRs only if relevant==true
        if: ${{ github.event_name != 'pull_request' || steps.detect.outputs.relevant == 'true' }}
        run: python tools/make_vmf_sample.py

      # Only commit/push when this is NOT a pull_request run.
      - name: Commit and push to branch
        if: ${{ github.event_name != 'pull_request' }}
        shell: bash
        run: |
          set -e
          BRANCH="bot/gen-vmf-sample"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -B "$BRANCH"
          git add data/samples/sample_vmf.bin
          git commit -m "Auto-generate VMF sample" || echo "No changes to commit"
          git push --force-with-lease origin "$BRANCH"

      # On PRs, always report success so the required check completes
      - name: PR info
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Validation for PR #${{ github.event.number }}."
          echo "Relevant changes: ${{ steps.detect.outputs.relevant || 'n/a' }}."
